message(STATUS "*** Create {argument_lib_pretty_name} Lib ***")

add_library({argument_lib_name} SHARED {argument_zinet_lib_type}
	{argument_headers}
	
	{argument_inl}
	
	{argument_source}
)

target_compile_features({argument_lib_name} PUBLIC {argument_cpp_standard})

set_target_properties({argument_lib_name} PROPERTIES 
	LINKER_LANGUAGE CXX
	INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/include/
	INCLUDE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/include/
)

set_target_properties({argument_lib_name}
    PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY {argument_archive_output_directory}
    LIBRARY_OUTPUT_DIRECTORY {argument_library_output_directory}
    RUNTIME_OUTPUT_DIRECTORY {argument_runtime_output_directory}
)

target_include_directories({argument_lib_name} PRIVATE ${SFML_INCLUDE_DIRS} ${COLONY_INCLUDE_DIRS})

target_link_libraries({argument_lib_name} PUBLIC {argument_link_libraries_string})

# Propagate macro with current dir
set(ZINET_CURRENT_PROJECT_ROOT_PATH ZINET_CURRENT_PROJECT_ROOT_PATH="${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "*** {argument_lib_name} ZINET_CURRENT_PROJECT_ROOT_PATH: ${ZINET_CURRENT_PROJECT_ROOT_PATH} ***")
target_compile_definitions({argument_lib_name} PRIVATE ${ZINET_CURRENT_PROJECT_ROOT_PATH})
unset(${ZINET_CURRENT_PROJECT_ROOT_PATH})

# Tests
add_subdirectory(tests)